@model TransactionsData.Models.ProductModel
@{
    ViewData["Title"] = "Product";
}
<h1>Product</h1>
<div class="container jumbotron">
    @using (Html.BeginForm("UpdateProduct", "Product", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, true, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12">
            <div class="form-group row control-label">
                <div class="col">
                    Product Name:
                    @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control", name = "mid", @id = "ProductName" } })
                    <div hidden>@Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", @id = "ID" } })</div>
                </div>
                <div class="col">
                    Product Code:
                    @Html.EditorFor(model => model.productCode, new { htmlAttributes = new { @class = "form-control", @id = "ProductCode" } })
                </div>
                <div class="col">
                    Supplier Code:
                    @*@Html.EditorFor(model => model.providerCode, new { htmlAttributes = new { @class = "form-control", @id = "ProductStatus" } })*@
                    @Html.DropDownListFor(model => model.providerCode, (List<SelectListItem>)ViewBag.Options, "Select Provider", new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group row control-label">
                <div class="col">
                    Status:
                    @{
                        var statues = new List<SelectListItem>()
                                                                                                                                                                                                                                                                                                                            {
                            new SelectListItem() { Text = "Enabled", Value = "Enabled" },
                            new SelectListItem() { Text = "Disabled", Value = "Disabled" },
                        };
                    }
                    @Html.DropDownListFor(model => model.status, statues, new { @class = "form-control" })                    
                </div>
                <div class="col">
                    Topup Level:
                    @Html.EditorFor(model => model.topupLevel, new { htmlAttributes = new { @class = "form-control", @id = "topuplevel" } })
                </div>
                <div class="col">
                    Information:
                    @Html.EditorFor(model => model.information, new { htmlAttributes = new { @class = "form-control", @id = "info" } })
                </div>
            </div>

            <div class="form-group row control-label">
                <div class="col float-left col-md-8">
                    <input type="submit" value="Update" class="btn btn-primary" id="btnSearch" />
                </div>
            </div>
        </div>
    }
</div>
